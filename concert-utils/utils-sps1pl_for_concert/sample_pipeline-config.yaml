finish:
  image: icr.io/continuous-delivery/pipeline/pipeline-base-image:2.39@sha256:499559f10a289300828536196947da164c09cece319e3ce3f30fd408cde55c5d
  dind: true
  abort_on_failure: false
  image_pull_policy: IfNotPresent
  script: |
    #!/usr/bin/env bash

    if [[ "$PIPELINE_DEBUG" == 1 ]]; then
      trap env EXIT
      env
      set -x
    fi

    if [[ "pr" == ${PIPELINE_NAMESPACE} ]]; then
      exit
    fi

    if [[ "Failed" == ${PIPELINE_STATUS} ]]; then
      echo "*** [.pipeline-config.yaml finish] Pipeline status is Failed"
      exit 1
    fi

    # Exit the stage if Concert automation support is not needed
    #
    # Note: Generation of Concert files depends upon value of concert-version. 
    #
    export CONCERT_VERSION=$(get_env concert-version 0)
    if [[ 0 == ${CONCERT_VERSION} ]]; then
      exit
    elif [[ "1.0.1" == ${CONCERT_VERSION} ]]; then
      echo "### [INFO] Concert version in use: ${CONCERT_VERSION}"
    elif [[ "1.0.2" == ${CONCERT_VERSION} ]]; then
      echo "### [INFO] Concert 1.0.2 support is under development"
      exit 
    else
      echo "*** [ERROR] Unsupported Concert version: ${CONCERT_VERSION}"
      exit
    fi

    source ${WORKSPACE}/${PIPELINE_CONFIG_REPO_PATH}/scripts/finish_concert.sh
