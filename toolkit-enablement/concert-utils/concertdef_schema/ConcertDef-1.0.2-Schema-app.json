{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://concert.ibm.com/schema/concertdef-1.0.2.schema.json",
  "type": "object",
  "title": "Concert v1.0.2 Schema for Application SBOMs",
  "required": [
    "bomFormat",
    "specVersion",
    "metadata"
  ],
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string",
      "enum": [
        "http://concert.ibm.com/schema/concertdef-1.0.2.json"
      ]
    },
    "bomFormat": {
      "type": "string",
      "title": "BOM Format",
      "description": "Format of the BOM.",
      "enum": [
        "ConcertDef"
      ]
    },
    "specVersion": {
      "type": "string",
      "title": "Concert Schema Specification Version",
      "description": "Version of the ConcertDef specification.",
      "examples": [
        "1.0.2"
      ]
    },
    "serialNumber": {
      "type": "string",
      "title": "BOM Serial Number",
      "description": "The unique URN of the BOM file. Prefix of the URN (e.g., 'urn:ibm:<clientName>:<appName>') must be registered with Concert.",
      "examples": [
        "urn:ibm:myorg:myapp"
      ]
    },
    "version": {
      "type": "integer",
      "title": "BOM Version",
      "description": "Version of the BOM file.",
      "minimum": 1,
      "default": 1,
      "examples": [
        1
      ]
    },
    "metadata": {
      "$ref": "#/definitions/metadata",
      "title": "BOM Metadata",
      "uniqueItems": true,
      "description": "Provides additional information about a BOM."
    },
    "components": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/blueprint-build"
          }
        ]
      },
      "uniqueItems": true,
      "title": "Components",
      "description": "A list of top-level software components."
    },
    "environments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/environment"
      },
      "uniqueItems": true,
      "title": "Environments",
      "description": "A list of software deployment environments."
    },
    "services": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/app-service"
          }
        ]
      },
      "uniqueItems": true,
      "title": "Components",
      "description": "A list of services in Application SBOM or in deploy SBOM."
    },
    "dependencies": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/dependency"
      },
      "uniqueItems": true,
      "title": "Dependencies",
      "description": "Provides the ability to document dependency relationships."
    },
    "properties": {
      "type": "array",
      "title": "Properties",
      "items": {
        "$ref": "#/definitions/property"
      }
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "title": "Tags",
      "description": "An optional list of strings that can be used for searching or filtering.",
      "examples": [
        "team-tiger"
      ]
    }
  },
  "definitions": {
    "refType": {
      "description": "An identifier which can be used to reference the component elsewhere in the BOM. Every bom-ref MUST be unique within the BOM.",
      "type": "string",
      "minLength": 1
    },
    "refLinkType": {
      "description": "Descriptor for an element identified by the attribute 'bom-ref' in the same BOM document.\nIn contrast to `bomLinkElementType`.",
      "allOf": [
        {
          "$ref": "#/definitions/refType"
        }
      ]
    },
    "bomLinkDocumentType": {
      "title": "CycloneDX BOM-Link Document",
      "description": "Descriptor for another BOM document. See https://cyclonedx.org/capabilities/bomlink/",
      "type": "string",
      "format": "iri-reference",
      "$comment": "part of the pattern is based on `bom.serialNumber`'s pattern",
      "examples": [
        "urn:uuid:97cdf861-f4e8-4bb1-893b-9e5907ebb399/1"
      ]
    },
    "bomLinkElementType": {
      "title": "CycloneDX BOM-Link Element",
      "description": "Descriptor for an element in a BOM document. See https://cyclonedx.org/capabilities/bomlink/",
      "type": "string",
      "format": "iri-reference",
      "$comment": "part of the pattern is based on `bom.serialNumber`'s pattern"
    },
    "bomLink": {
      "anyOf": [
        {
          "$ref": "#/definitions/bomLinkDocumentType"
        },
        {
          "$ref": "#/definitions/bomLinkElementType"
        }
      ]
    },
    "metadata": {
      "type": "object",
      "title": "BOM Metadata Object",
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp",
          "description": "ISO 8601 date and time when the BOM was created.",
          "examples": [
            "2024-01-01T12:00:00Z"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "application"
          ],
          "title": "Metadata Type",
          "description": "Specifies the ConcertDef type of the software component.  The types are:\n\n* __application__ = A software application definition without environment-dependent deployment specifics for its constituent containers, code repositories, services, and/or API endpoints.\n* __build__ = A component comprising versioned container image artifact and the associated versioned code repository.\n* __deploy__ = A component comprsing deployment components, runtime-components, and relevant services and API endpoint URLs for deploying environment-specific application microservices.",
          "examples": [
            "build"
          ]
        },
        "environment": {
          "type": "string",
          "title": "Deployment Environment",
          "description": "Deployment environment of the ConcertDef Deploy component.  It must be one of the deployment environments of any ConcertDef Application component that includes this Deploy component.",
          "examples": [
            "production"
          ]
        },
        "component": {
          "type": "object",
          "title": "Metadata Component",
          "description": "ConcertDef component labels used for searching or selecting in Concert.",
          "required": [
            "name",
            "version"
          ],
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Name of the ConcertDef component",
              "examples": [
                "my-component-1"
              ]
            },
            "version": {
              "type": "string",
              "title": "Version",
              "description": "Versioon string of the ConcertDef component.",
              "examples": [
                "2.100.0"
              ]
            }
          }
        },
        "business": {
          "$ref": "#/definitions/organizationalEntity"
        },
        "properties": {
          "type": "array",
          "title": "Properties",
          "items": {
            "$ref": "#/definitions/property"
          }
        }
      }
    },
    "organizationalEntity": {
      "type": "object",
      "title": "Organizational Entity Object",
      "required": [
        "name"
      ],
      "description": " The business organization that supplied the component that the BOM describes.",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The name of the business organization",
          "examples": [
            "Acme Inc."
          ]
        },
        "units": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/organizationalContact"
          },
          "uniqueItems": true,
          "title": "Business Units",
          "description": "A list of business units."
        }
      }
    },
    "organizationalContact": {
      "type": "object",
      "title": "Organizational Contact",
      "required": [
        "name"
      ],
      "description": "A business unit contact at the organization. Multiple contacts are allowed.",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The name of a business unit",
          "examples": [
            "HR"
          ]
        },
        "email": {
          "type": "string",
          "format": "idn-email",
          "title": "Email Address",
          "description": "The email address of the business unit.",
          "examples": [
            "hr@acme.com"
          ]
        },
        "phone": {
          "type": "string",
          "title": "Phone",
          "description": "The phone number of the business unit.",
          "examples": [
            "(123) 123-1234"
          ]
        }
      }
    },
    "blueprint-build": {
      "type": "object",
      "title": "Build Blueprint",
      "required": [
        "type",
        "name",
        "version"
      ],
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "$ref": "#/definitions/refType"
        },
        "type": {
          "type": "string",
          "enum": [
            "build"
          ]
        },
        "name": {
          "type": "string",
          "title": "Build Blueprint Name",
          "description": "Name of the Build component. This is often a shortened, single name of the component.",
          "examples": [
            "my-component-1"
          ]
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Version string for the component.  The value can be a timestamp string.",
          "examples": [
            "0.0.1"
          ]
        },
        "components": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/blueprint-library"
              },
              {
                "$ref": "#/definitions/blueprint-container"
              },
              {
                "$ref": "#/definitions/blueprint-code"
              }
            ]
          },
          "title": "Blueprint Objects for a Build Component",
          "description": "A list of Build object blueprints, each of which is associated with a Build object."
        },
        "properties": {
          "type": "array",
          "title": "Properties",
          "items": {
            "$ref": "#/definitions/property"
          }
        }
      }
    },
    "blueprint-library": {
      "type": "object",
      "title": "Library Blueprint",
      "required": [
        "type",
        "name",
        "version"
      ],
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "$ref": "#/definitions/refType"
        },
        "type": {
          "type": "string",
          "enum": [
            "library"
          ]
        },
        "name": {
          "type": "string",
          "title": "Library Name",
          "description": "Library name per CycloneDX specification.",
          "examples": [
            "maven/com.app.example"
          ]
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Version string for the component.",
          "examples": [
            "0.0.1"
          ]
        }
      }
    },
    "blueprint-container": {
      "type": "object",
      "title": "Container Blueprint",
      "required": [
        "type",
        "name"
      ],
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "$ref": "#/definitions/refType"
        },
        "type": {
          "type": "string",
          "enum": [
            "container"
          ]
        },
        "name": {
          "type": "string",
          "title": "Container Name",
          "description": "Container name as an image registry path.",
          "examples": [
            "us.icr.io/myapp/my-component-1"
          ]
        }
      }
    },
    "blueprint-code": {
      "type": "object",
      "title": "Code Blueprint",
      "required": [
        "type",
        "name"
      ],
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "$ref": "#/definitions/refType"
        },
        "type": {
          "type": "string",
          "enum": [
            "code"
          ]
        },
        "name": {
          "type": "string",
          "title": "Code Name",
          "description": "Name of the Code blueprint. This is often a shortened, single name of the code repo.",
          "examples": [
            "my-component-1"
          ]
        },
        "purl": {
          "type": "string",
          "title": "Code URL",
          "description": "URL (or folder path) of the Code blueprint. This is often the URL of a source code repo (or file system).",
          "examples": [
            "https://github.ibm.com/myapp/my-component-1"
          ]
        }
      }
    },
    "environment": {
      "type": "object",
      "title": "Environment",
      "required": [
        "type",
        "name"
      ],
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "$ref": "#/definitions/refType"
        },
        "type": {
          "type": "string",
          "enum": [
            "environment"
          ],
          "title": "Environment Type",
          "description": "A deployment environment."
        },
        "name": {
          "type": "string",
          "title": "Environment Name",
          "description": "Name of the environment.",
          "examples": [
            "qa", "development", "stage", "pre-production", "prod", "production"
          ]
        }
      }
    },
    "app-service": {
      "type": "object",
      "title": "Service Blueprint in Application SBOM",
      "required": [
        "name",
        "endpoints"
      ],
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "$ref": "#/definitions/refType"
        },
        "name": {
          "type": "string",
          "title": "Service Name",
          "description": "The name of the service. This will often be a shortened, single name of the service.",
          "examples": [
            "mongodb"
          ]
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "title": "Endpoints",
          "description": "The API paths of the service providing component. Base URLs of the API service endpoints are provided by the service's Deploy component",
          "examples": [
            "/v1/ticker"
          ]
        },
        "properties": {
          "type": "array",
          "title": "Properties",
          "description": "Valid values for the \"network_exposure\" property are: \"private\" and \"public\".  Networking infrastructure of the target deployment environments must be configured and managed accordingly.",
          "items": {
            "$ref": "#/definitions/property"
          }
        }
      }
    },
    "dependency": {
      "type": "object",
      "title": "Dependency",
      "description": "Defines the direct dependencies of a component or service.",
      "required": [
        "ref",
        "dependsOn"
      ],
      "additionalProperties": false,
      "properties": {
        "ref": {
          "$ref": "#/definitions/refLinkType",
          "title": "Reference",
          "description": "References a component or service by its bom-ref attribute"
        },
        "dependsOn": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/refLinkType"
          },
          "title": "Depends On",
          "description": "The bom-ref identifiers of the components or services that are dependencies of this dependency object."
        }
      }
    },
    "property": {
      "type": "object",
      "title": "Lightweight name-value pair",
      "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values.",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The name of the property. Duplicate names are allowed, each potentially having a different value."
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "The value of the property."
        }
      }
    }
  }
}